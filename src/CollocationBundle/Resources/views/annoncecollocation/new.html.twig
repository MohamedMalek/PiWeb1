{% extends 'base.html.twig' %}

{% block body  %}
<!DOCTYPE html>
<html lang="en" >

<head>
    <meta charset="UTF-8">
    <title>Multipage form - Foundation</title>


    <link rel='stylesheet prefetch' href='https://cdn.jsdelivr.net/foundation/6.2.0/foundation.min.css'>

    <link href="{{ asset('CollocationRessources/css/style1.css') }}" rel="stylesheet" type="text/css" />
    <style>
        /* Always set the map height explicitly to define the size of the div
         * element that contains the map. */
        #map {
            height: 300px;
            width: 580px;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
        .controls {
            margin-top: 10px;
            border: 1px solid transparent;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            height: 32px;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 300px;
        }

        #pac-input:focus {
            border-color: #4d90fe;
        }

        .pac-container {
            font-family: Roboto;
        }

        #type-selector {
            color:  #fff;

        }

        #type-selector label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }
    </style>

</head>

<body>

{{ form_start(form) }}
<script src="{{ asset('Collocation/js/jquery-2.1.1.js') }}" type="text/javascript"></script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBoVSG3FplX2Ckbl672m4HWjnKK4WS5j2w&libraries=places&callback=initMap"
        async defer></script>
<script>$( document ).ready(function() {
        initMap();
    });</script>

    <div style="width: 600px; margin-left: 300px"><br>
        <div class="multiPageForm">
            <ul class="tabs" data-tabs id="example-tabs">
                <li class="tabs-title is-active"><a href="#panel1" aria-selected="true">Step 1</a></li>
                <li class="tabs-title"><a href="#panel2">Step 2</a></li>
                <li class="tabs-title"><a href="#panel3">Step 3</a></li>
                <li class="tabs-title"><a href="#panel4">Step 4</a></li>
            </ul>

            <div class="tabs-content" data-tabs-content="example-tabs">
                <div class="tabs-panel is-active" id="panel1">
                    {{ form_row(form.idAnnonceur) }}
                    {{ form_row(form.titreAnnonce) }}
                    {{ form_row(form.description) }}
                    {{ form_row(form.datedebut) }}
                    {{ form_row(form.datefin) }}
                    {{ form_row(form.nombrechambres) }}
                    {{ form_row(form.nombreslits) }}
                    {{ form_row(form.tarif) }}
                    <a href="#" class="button success round next-tab right">Next</a>
                </div>


                <div class="tabs-panel" id="panel2">

                    <input id="pac-input" class="controls" type="text"
                           placeholder="Enter a location" name="adresse" required>
                    <div id="type-selector" class="controls" >
                        <ul> <li><input type="radio" name="type" id="changetype-all" checked="checked">
                        <label for="changetype-all">All</label>
                            </li>
                            <li> <input type="radio" name="type" id="changetype-establishment">
                        <label for="changetype-establishment">Establishments</label></li>
                       <li> <input type="radio" name="type" id="changetype-address">
                           <label for="changetype-address">Addresses</label></li>

                        <li><input type="radio" name="type" id="changetype-geocode">
                            <label for="changetype-geocode">Geocodes</label></li>
                       </ul>
                    </div>
                    <div id="map"></div>

                    <!-- /Body -->

                    </article>
                    <a href="#" class="button secondary round prev-tab left">Previous</a>
                    <a href="#" class="button success round next-tab right">Next</a>
                </div>

                <div class="tabs-panel" id="panel3">
                    {{ form_row(form.equipements) }}
                    <a href="#" class="button secondary round prev-tab left">Previous</a>
                    <a href="#" class="button success round next-tab right">Next</a>
                </div>

                <div class="tabs-panel" id="panel4">

                    {{ form_row(form.image, {'attr': {'class': 'custom-file-upload' }}) }}
                    {{ form_row(form.image1, {'attr': {'class': 'custom-file-upload' }}) }}
                    {{ form_row(form.image2, {'attr': {'class': 'custom-file-upload' }}) }}
                    {{ form_row(form.image3, {'attr': {'class': 'custom-file-upload' }}) }}
                    <a href="#" class="button secondary round prev-tab left">Previous</a>
                </div>
            </div>
        </div>
    </div>
    <h1>Annoncecollocation creation</h1>


<input type="submit" value="Create">

    {{ form_end(form) }}

    <ul>
        <li>
            <a href="{{ path('annoncecollocation_index') }}">Back to the list</a>
        </li>
    </ul>


    <script src='https://cdn.jsdelivr.net/foundation/6.2.1/foundation.min.js'></script>



    <script src="{{ asset('CollocationRessources/js/index.js') }}" type="text/javascript"></script>
<script>
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -33.8688, lng: 151.2195},
            zoom: 13
        });
        var input = /** @type {!HTMLInputElement} */(
            document.getElementById('pac-input'));

        var types = document.getElementById('type-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                // User entered the name of a Place that was not suggested and
                // pressed the Enter key, or the Place Details request failed.
                window.alert("No details available for input: '" + place.name + "'");
                return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setIcon(/** @type {google.maps.Icon} */({
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            var address = '';
            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(id, types) {
            var radioButton = document.getElementById(id);
            radioButton.addEventListener('click', function() {
                autocomplete.setTypes(types);
            });
        }

        setupClickListener('changetype-all', []);
        setupClickListener('changetype-address', ['address']);
        setupClickListener('changetype-establishment', ['establishment']);
        setupClickListener('changetype-geocode', ['geocode']);
    }
</script>




</body>

</html>

{% endblock %}